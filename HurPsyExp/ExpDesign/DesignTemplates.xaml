<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:expapp="clr-namespace:HurPsyExp"
                    xmlns:expdesign="clr-namespace:HurPsyExp.ExpDesign"
                    xmlns:expstrings="clr-namespace:HurPsyExpStrings;assembly=HurPsyExpStrings">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DesignBrushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--When applied to a `ListBoxItem`, this style makes it use the regular and selected brushes from the file *DesignBrushes.xaml*-->
    <Style x:Key="DefsListItem" TargetType="{x:Type ListBoxItem}">

        <Setter Property="FontSize" Value="{Binding Source={StaticResource AppSettings}, Path=SmallFontSize}"/>

        <!--This will bind the `IsSelected` property of the listbox item to the experiment element's `Selected` property.-->
        <Setter Property="IsSelected" Value="{Binding Selected}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="templateBorder" BorderThickness="2">
                        <ContentPresenter/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True" >
                            <Setter TargetName="templateBorder" Property="Background" Value="{StaticResource SelectionBrush}"/>
                            <Setter TargetName="templateBorder" Property="BorderBrush" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False" >
                            <Setter TargetName="templateBorder" Property="Background" Value="Transparent"/>
                            <Setter TargetName="templateBorder" Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <expdesign:ItemViewTemplateSelector x:Key="itemvmTemplateSelector"/>

    <BooleanToVisibilityConverter x:Key="boolvisConverter"/>

    <!--When this template is applied to a ContentControl,
        the control's width can be changed by using the slider appearing at the top.-->
    <ControlTemplate x:Key="HorizontallySizableControl" TargetType="ContentControl">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Slider Orientation="Horizontal" Grid.Row="0"
                    ToolTip="{x:Static expstrings:StringResources.Tooltip_ResizeSlider}"
                    Minimum="{Binding Path=MinWidth, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}"
                    Maximum="{Binding Path=MaxWidth, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}"
                    Value="{Binding Path=Width, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}"/>
            <ContentControl Grid.Row="1" Background="{TemplateBinding Background}"
                        Content="{TemplateBinding Content}"/>
        </Grid>
    </ControlTemplate>

    <!--When applied to a Slider control,
        this template makes it look like a NumericUpDown control.-->
    <ControlTemplate x:Key="NumericUpDownSlider" TargetType="Slider">
        <Grid Margin="2" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Source={StaticResource AppSettings}, Path=CommandButtonHeight}"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="{Binding Source={StaticResource AppSettings}, Path=CommandButtonHeight}"/>
            </Grid.ColumnDefinitions>
            <TextBlock VerticalAlignment="Center" Grid.Column="1"
                       HorizontalAlignment="Stretch" TextAlignment="Center"
                       Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Window}}"
                       FontSize="{Binding Source={StaticResource AppSettings}, Path=FontSize}"
                       Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"/>
            <RepeatButton Grid.Column="0" Command="Slider.DecreaseLarge"
                          Height="{Binding Source={StaticResource AppSettings}, Path=CommandButtonHeight}">
                <Image Source="..\Images\decrement.png" Stretch="Fill"/>
            </RepeatButton>
            <RepeatButton Grid.Column="2" Command="Slider.IncreaseLarge"
                          Height="{Binding Source={StaticResource AppSettings}, Path=CommandButtonHeight}">
                <Image Source="..\Images\increment.png" Stretch="Fill"/>
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="IconTemplate">
        <StackPanel Orientation="Vertical" Margin="2">

            <Image Height="{Binding Source={StaticResource AppSettings}, Path=ImagePreviewHeight}"
                   Source="{Binding IconImage}" Stretch="Uniform"/>

            <TextBlock Grid.Column="1" Margin="2"
                       Text="{Binding ItemObject.Id}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ItemTemplate">
        <ContentControl x:Name="templateContent" Margin="10,2,2,2"
                        Content="{Binding}"
                        ContentTemplateSelector="{StaticResource itemvmTemplateSelector}">
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="HtmlStimulusItemTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <Image Grid.Column="0" Margin="2"
               Height="{Binding Source={StaticResource AppSettings}, Path=ImagePreviewHeight}"
               Source="{Binding IconImage}" Stretch="Uniform"
               ToolTip="{x:Static expstrings:StringResources.Tooltip_HtmlStimulus}"/>

            <TextBox Grid.Column="1" Margin="2"
                 Text="{Binding TempId}" VerticalContentAlignment="Center"
                 ToolTip="{x:Static expstrings:StringResources.Tooltip_StimulusId}"/>

            <TextBox Grid.Column="2" Margin="2"
                 TextAlignment="Right" VerticalContentAlignment="Center"
                 Text="{Binding ItemObject.VisualSize.Width, StringFormat='0.0'}"
                 ToolTip="{x:Static expstrings:StringResources.Tooltip_VisualStimulusWidth}"/>
            <TextBox Grid.Column="3" Margin="2"
                 TextAlignment="Right" VerticalContentAlignment="Center"
                 Text="{Binding ItemObject.VisualSize.Height, StringFormat='0.0'}"
                 ToolTip="{x:Static expstrings:StringResources.Tooltip_VisualStimulusHeight}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ImageStimulusItemTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <Image Grid.Column="0" Margin="2"
                   Height="{Binding Source={StaticResource AppSettings}, Path=ImagePreviewHeight}"
                   Source="{Binding IconImage}" Stretch="Uniform"
                   ToolTip="{x:Static expstrings:StringResources.Tooltip_ImageStimulus}"/>

            <TextBox Grid.Column="1" Margin="2"
                     Text="{Binding TempId}" VerticalContentAlignment="Center"
                     ToolTip="{x:Static expstrings:StringResources.Tooltip_StimulusId}"/>

            <TextBox Grid.Column="2" Margin="2"
                     TextAlignment="Right" VerticalContentAlignment="Center"
                     Text="{Binding ItemObject.VisualSize.Width, StringFormat='0.0'}"
                     ToolTip="{x:Static expstrings:StringResources.Tooltip_VisualStimulusWidth}"/>
            <TextBox Grid.Column="3" Margin="2"
                     TextAlignment="Right" VerticalContentAlignment="Center"
                     Text="{Binding ItemObject.VisualSize.Height, StringFormat='0.0'}"
                     />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="PointLocatorItemTemplate">
        <Grid Name="LocatorTemplateGrid" Margin="10,2,2,2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="60"/>
            </Grid.ColumnDefinitions>

            <Image Grid.Column="0" Margin="2"
                   Height="{Binding Source={StaticResource AppSettings}, Path=ImagePreviewHeight}"
                   Source="{Binding IconImage}" Stretch="Uniform"
                   ToolTip="{x:Static expstrings:StringResources.Tooltip_PointLocator}"/>
            <TextBox Grid.Column="1" Margin="2"
                     Text="{Binding TempId}" VerticalContentAlignment="Center"
                     ToolTip="{x:Static expstrings:StringResources.Tooltip_LocatorId}"/>
            <TextBox Grid.Column="2" Margin="2"
                     TextAlignment="Right" VerticalContentAlignment="Center"
                     Text="{Binding ItemObject.LocatorPoint.X, StringFormat='0.0'}"
                     ToolTip="{x:Static expstrings:StringResources.Tooltip_PointLocatorX}"/>
            <TextBox Grid.Column="3" Margin="2"
                     TextAlignment="Right" VerticalContentAlignment="Center"
                     Text="{Binding ItemObject.LocatorPoint.Y, StringFormat='0.0'}"
                     ToolTip="{x:Static expstrings:StringResources.Tooltip_PointLocatorY}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="StepTemplate">
        <StackPanel Orientation="Horizontal" Margin="10,2,2,2">
            <TextBox Margin="2" Height="Auto" VerticalAlignment="Center"
                 Text="{Binding StepTime.Milliseconds, StringFormat='0.0'}"
                 FontSize="{Binding Source={StaticResource AppSettings}, Path=SmallFontSize}"/>
            <TextBlock Margin="2" Height="Auto" VerticalAlignment="Center"
                   Text="ms"
                   FontSize="{Binding Source={StaticResource AppSettings}, Path=SmallFontSize}"/>
            <ItemsControl ItemsSource="{Binding StimulusLocators}"
                  FontSize="{Binding Source={StaticResource AppSettings}, Path=SmallFontSize}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" Margin="2"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="{Binding LocatorId}" Margin="2" Padding="2"
                                   FontWeight="Bold" Opacity="0.5"
                                   Background="{StaticResource ControlBackground}"/>
                            <TextBlock Text="{Binding StimulusId}" Margin="2" Padding="2"
                                   Background="{StaticResource ControlBackground}"/>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="TrialTemplate">
        <StackPanel Margin="10,2,2,2">
            <TextBlock Text="{Binding Id}" Margin="2"
                       FontSize="{Binding Source={StaticResource AppSettings}, Path=SmallFontSize}"/>
            <ListBox x:Name="lbSteps"
                     ItemsSource="{Binding Steps}"
                     ItemTemplate="{StaticResource StepTemplate}"
                     Background="{StaticResource ItemBrush}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="BlockTemplate">
        <Grid Margin="10,2,2,2">
            <Expander ExpandDirection="Down" IsExpanded="False">
                <Expander.Header>
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top"
                                Background="{StaticResource BarBrush}"
                                HorizontalAlignment="Stretch">
                        <Button Margin="2"
                                Height="{Binding Source={StaticResource AppSettings}, Path=CommandButtonHeight}"
                                ToolTip="{x:Static expstrings:StringResources.Tooltip_BlockContextMenu}">
                            <Image Source="..\Images\AddBlock.png" Stretch="Fill"/>

                            <Button.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="{x:Static expstrings:StringResources.Header_AddTrial}"/>

                                    <MenuItem Header="{x:Static expstrings:StringResources.Header_MustShuffleTrials}"
                                              IsCheckable="True"
                                              IsChecked="{Binding ItemObject.MustShuffleTrials, Mode=TwoWay}"/>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>

                        <TextBox Margin="2" Text="{Binding TempId}"/>
                    </StackPanel>
                </Expander.Header>

                <ListBox x:Name="lbTrials"
                         ItemsSource="{Binding ItemObject.Trials}"
                         ItemContainerStyle="{StaticResource DefsListItem}"
                         ItemTemplate="{StaticResource TrialTemplate}"
                         SelectionMode="Multiple"
                         Background="{StaticResource ItemBrush}"/>
                
            </Expander>
        </Grid>
    </DataTemplate>
</ResourceDictionary>