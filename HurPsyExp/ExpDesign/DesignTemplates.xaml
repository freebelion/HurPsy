<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:expapp="clr-namespace:HurPsyExp"
                    xmlns:expdesign="clr-namespace:HurPsyExp.ExpDesign"
                    xmlns:stringlib="clr-namespace:HurPsyExpStrings;assembly=HurPsyExpStrings">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DesignStyles.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <BooleanToVisibilityConverter x:Key="boolvis"/>


    <expapp:ItemViewTemplateSelector x:Key="itemvmTemplateSelector"/>

    <!--This template will be applied to all items appearing in lists of experiment elements' definitions.
        The idea in the backburner is to have small edit&delete buttons appear on all such items.
        The inner ContentControl's appearance will change depending on the item type.
    -->
    <DataTemplate x:Key="ItemViewTemplate">
        <Border Name="TemplateBorder" BorderThickness="1">
            <Grid Name="TemplateGrid">

                <Grid.InputBindings>
                    <MouseBinding Command="{Binding ToggleSelectCommand}" MouseAction="LeftClick"/>
                    <!--Disabled until a need arises
                        <MouseBinding Command="{Binding ToggleEditCommand}" MouseAction="LeftDoubleClick"/>
                    -->
                    <!--This one is disabled as well, because it does not work, 
                        <KeyBinding Command="{Binding DeleteItemCommand}" Key="Delete"/>
                        for some reason.
                    -->
                </Grid.InputBindings>

                <!--It is the ContentControl whose appearance will be changed
                    by the template selector according to the actual type of the item.
                -->
                <ContentControl Name="ViewContent" Content="{Binding}"
                                ContentTemplateSelector="{StaticResource itemvmTemplateSelector}">
                </ContentControl>
            </Grid>
        </Border>

        <DataTemplate.Triggers>
            <!--TODO: Rethink and hopefully improve color and brush definitions.-->
            <!--TODO: Consider using different item and selection brushes for different types of items.-->
            <DataTrigger Binding="{Binding Path=Selected}" Value="True">
                <Setter TargetName="TemplateBorder" Property="BorderBrush" Value="Red"/>
                <Setter TargetName="TemplateGrid" Property="Background" Value="{StaticResource SelectionBrush}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=Selected}" Value="False">
                <Setter TargetName="TemplateBorder" Property="BorderBrush" Value="Transparent"/>
                <Setter TargetName="TemplateGrid" Property="Background" Value="{StaticResource ItemBrush}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="StepTemplate">
        <StackPanel Orientation="Horizontal"
                Background="{StaticResource ItemBrush}">
            <ItemsControl ItemsSource="{Binding StimulusLocators}"
                      FontSize="{Binding Source={StaticResource DesignPreferences}, Path=SmallFontSize}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" Margin="2"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="{Binding LocatorId}" Margin="2" Padding="2"
                                       Background="{StaticResource ControlBackground}"/>
                            <TextBlock Text="{Binding StimulusId}" Margin="2" Padding="2"
                                       Background="{StaticResource ControlBackground}"/>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <TextBox Margin="2" Height="Auto" VerticalAlignment="Center"
                     Text="{Binding StepTime.Milliseconds, StringFormat='0.0'}"
                     FontSize="{Binding Source={StaticResource DesignPreferences}, Path=SmallFontSize}"/>
            <TextBlock Margin="2" Height="Auto" VerticalAlignment="Center"
                       Text="ms"
                       FontSize="{Binding Source={StaticResource DesignPreferences}, Path=SmallFontSize}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="TrialTemplate">
        <Grid DataContext="{Binding ItemObject}">
            <ItemsControl ItemsSource="{Binding Steps}"
                          ItemTemplate="{StaticResource StepTemplate}"/>
        </Grid>
    </DataTemplate>
    
    <DataTemplate x:Key="BlockTemplate">
        <Grid>
            <Expander ExpandDirection="Down" IsExpanded="False">
                <Expander.Header>
                    <TextBox Text="{Binding ItemObject.Name}"/>
                </Expander.Header>
                <DockPanel HorizontalAlignment="Stretch">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top"
                                Style="{StaticResource CommandBar}"
                                HorizontalAlignment="Stretch">
                        <Button Style="{StaticResource CommandButton}"
                                Command="{Binding AddingTrialCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}}"
                                ToolTip="{x:Static stringlib:StringResources.Tooltip_AddTrial}">
                            <Image Source="..\Images\AddTrial.png" Stretch="Fill"/>
                        </Button>
                    </StackPanel>

                    <ItemsControl Name="TrialsControl"
                                  ItemsSource="{Binding TrialVMs}"
                                  ItemTemplate="{StaticResource ItemViewTemplate}">

                    </ItemsControl>
                </DockPanel>
            </Expander>
        </Grid>
    </DataTemplate>
    
    <DataTemplate x:Key="VisualStimulusTemplate">
        <Grid HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <Image Grid.Column="0" Margin="2"
                   Source="{Binding IconImage}" Stretch="Uniform"
                   Height="{Binding Source={StaticResource DesignPreferences}, Path=ImagePreviewHeight}"/>

            <TextBox Grid.Column="1" Margin="2"
                     IsEnabled="{Binding Editable}"
                     Text="{Binding TempId}"
                     ToolTip="{x:Static stringlib:StringResources.Tooltip_StimulusId}"/>

            <TextBox Grid.Column="2" Margin="2"
                      IsEnabled="{Binding Editable}"
                      TextAlignment="Right"
                      Text="{Binding ItemObject.VisualSize.Width, StringFormat='0.0'}"
                      ToolTip="{x:Static stringlib:StringResources.Tooltip_VisualStimulusWidth}"/>
            <TextBox Grid.Column="3" Margin="2"
                     IsEnabled="{Binding Editable}"
                     TextAlignment="Right"
                     Text="{Binding ItemObject.VisualSize.Height, StringFormat='0.0'}"
                     ToolTip="{x:Static stringlib:StringResources.Tooltip_VisualStimulusHeight}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="PointLocatorTemplate">
        <Grid Name="LocatorTemplateGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="60"/>
            </Grid.ColumnDefinitions>

            <Image Grid.Column="0" Margin="2"
               Source="..\Images\PointLocator.png" Stretch="Uniform"
               Height="{Binding Source={StaticResource DesignPreferences}, Path=ImagePreviewHeight}"/>

            <TextBox Grid.Column="1" Margin="2"
                 Text="{Binding TempId}"/>
            <TextBox Grid.Column="2" Margin="2"
                 TextAlignment="Right"
                 Text="{Binding ItemObject.LocatorPoint.X, StringFormat='0.0'}"/>
            <TextBox Grid.Column="3" Margin="2"
                 TextAlignment="Right"
                 Text="{Binding ItemObject.LocatorPoint.Y, StringFormat='0.0'}"/>
        </Grid>
    </DataTemplate>
    
    <!--When this template is applied to a ContentControl,
        the control's width can be changed by using the slider appearing at the top.-->
    <ControlTemplate x:Key="HorizontallySizableControl" TargetType="ContentControl">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Slider Orientation="Horizontal" Grid.Row="0"
                    ToolTip="{x:Static stringlib:StringResources.Tooltip_ResizeSlider}"
                    Minimum="{Binding Path=MinWidth, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}"
                    Maximum="{Binding Path=MaxWidth, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}"
                    Value="{Binding Path=Width, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}"/>
            <ContentControl Grid.Row="1" Background="{TemplateBinding Background}"
                            Content="{TemplateBinding Content}"/>
        </Grid>
    </ControlTemplate>
    
</ResourceDictionary>