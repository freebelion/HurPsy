<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:expapp="clr-namespace:HurPsyExp"
                    xmlns:expdesign="clr-namespace:HurPsyExp.ExpDesign"
                    xmlns:expstrings="clr-namespace:HurPsyExpStrings;assembly=HurPsyExpStrings"
                    xmlns:psylib="clr-namespace:HurPsyLib;assembly=HurPsyLib"
                    xmlns:wpfint="http://schemas.microsoft.com/xaml/behaviors">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ExpDesign/DesignStyles.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <BooleanToVisibilityConverter x:Key="bvisConverter"/>
    <expdesign:IdObjectTemplateSelector x:Key="idobjTemplateSelector"/>

    <Image x:Key="AddPairIcon" Source="/Images/increment.png" x:Shared="False"
           Width="{Binding Source={StaticResource AppSettings}, Path=SmallFontSize}"
           Height="{Binding Source={StaticResource AppSettings}, Path=SmallFontSize}"
           Stretch="Fill"/>

    <Border x:Key="AddPairPopup" x:Shared="False"
        Style="{StaticResource PairBorder}"
        DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}">
        <StackPanel Orientation="Vertical">
            <Border Style="{StaticResource PairBorder}">
                <ComboBox ItemsSource="{Binding LocatorVMs}"
                          DisplayMemberPath="TempId"
                          SelectedItem="{Binding Path=SelectedLocatorVM, Mode=TwoWay}"/>
            </Border>
            <Border Style="{StaticResource PairBorder}">
                <ComboBox ItemsSource="{Binding StimulusVMs}"
                          DisplayMemberPath="TempId"
                          SelectedItem="{Binding Path=SelectedStimulusVM, Mode=TwoWay}"/>
            </Border>

            <DockPanel LastChildFill="False">
                <Button DockPanel.Dock="Left"
                    Content="{x:Static expstrings:StringResources.Label_OK}">
                    <wpfint:Interaction.Triggers>
                        <wpfint:EventTrigger EventName="Click">
                            <wpfint:InvokeCommandAction
                                Command="{Binding AddPairCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                        </wpfint:EventTrigger>
                    </wpfint:Interaction.Triggers>
                </Button>
                <Button DockPanel.Dock="Right"
                    Content="{x:Static expstrings:StringResources.Label_Cancel}">
                    <wpfint:Interaction.Triggers>
                        <wpfint:EventTrigger EventName="Click">
                            <wpfint:InvokeCommandAction
                                Command="{Binding CancelAddPairCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                        </wpfint:EventTrigger>
                    </wpfint:Interaction.Triggers>
                </Button>
            </DockPanel>
        </StackPanel>
    </Border>

    <Style x:Key="AddPairToggleStyle" TargetType="ToggleButton">
        <Setter Property="Margin" Value="2"/>
        
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="{StaticResource AddPairPopup}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content" Value="{StaticResource AddPairIcon}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <DataTemplate x:Key="ImageStimulusEditTemplate">
        <Grid DataContext="{Binding ItemObject}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0"
                       Text="{x:Static expstrings:StringResources.Label_VisualWidth}"
                       TextAlignment="Center"/>
            <TextBox Grid.Row="1" Grid.Column="0" Margin="2"
                     TextAlignment="Right" VerticalContentAlignment="Center"
                     Text="{Binding VisualSize.Width, StringFormat='0.0'}"/>

            <TextBlock Grid.Row="0" Grid.Column="1"
                       Text="{x:Static expstrings:StringResources.Label_VisualHeight}"
                       TextAlignment="Center"/>
            <TextBox Grid.Row="1" Grid.Column="1" Margin="2"
                     TextAlignment="Right" VerticalContentAlignment="Center"
                     Text="{Binding VisualSize.Height, StringFormat='0.0'}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="PointLocatorEditTemplate">
        <Grid DataContext="{Binding ItemObject}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0"
                       Text="{x:Static expstrings:StringResources.Label_LocationX}"
                       TextAlignment="Center"/>
            <TextBox Grid.Row="1" Grid.Column="0" Margin="2"
                     TextAlignment="Right" VerticalContentAlignment="Center"
                     Text="{Binding LocatorPoint.X, StringFormat='0.0'}"/>

            <TextBlock Grid.Row="0" Grid.Column="1"
                       Text="{x:Static expstrings:StringResources.Label_LocationY}"
                       TextAlignment="Center"/>
            <TextBox Grid.Row="1" Grid.Column="1" Margin="2"
                     TextAlignment="Right" VerticalContentAlignment="Center"
                     Text="{Binding LocatorPoint.Y, StringFormat='0.0'}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="PairTemplate">
        <Border Style="{StaticResource PairBorder}"
                Background="{StaticResource PairTemplateBrush}"
                Margin="2">
            <StackPanel Orientation="Vertical">
                <Border Style="{StaticResource PairBorder}">
                    <TextBlock Grid.Row="0" Text="{Binding LocatorId}" Margin="2"/>
                </Border>
                <Border Style="{StaticResource PairBorder}">
                    <TextBlock Grid.Row="0" Text="{Binding StimulusId}" Margin="2"/>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="StepTemplate">
        <StackPanel Orientation="Vertical" Margin="1"
                    Background="{StaticResource StepTemplateBrush}">
            <DockPanel LastChildFill="False">
                <TextBlock Text="{x:Static expstrings:StringResources.Label_StepTime}"
                           DockPanel.Dock="Left" VerticalAlignment="Top"
                           Margin="2"/>
                <TextBox Text="{Binding StepTime.Milliseconds, StringFormat='0.0'}"
                         DockPanel.Dock="Left" VerticalAlignment="Top"
                         Margin="2"/>
                <TextBlock Text="ms"
                           DockPanel.Dock="Left" VerticalAlignment="Top"
                           Margin="2"/>

                <ToggleButton x:Name="btnAddPair" DockPanel.Dock="Right"
                              ToolTip="{x:Static expstrings:StringResources.Tooltip_btnAddPair}"
                              Style="{StaticResource AddPairToggleStyle}"/>
            </DockPanel>
            <ItemsControl x:Name="PairItemsCtrl"
                          ItemsSource="{Binding StepPairs}"
                          ItemTemplate="{StaticResource PairTemplate}"
                          ToolTip="{x:Static expstrings:StringResources.Tooltip_PairItemsCtrl}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"
                                   Width="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=ActualWidth}"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </StackPanel>
    </DataTemplate>
    
    <DataTemplate x:Key="TrialTemplate">
        <Border Margin="1" BorderBrush="{StaticResource TrialBorderBrush}" BorderThickness="1"
                CornerRadius="2" Padding="2">
            <StackPanel Orientation="Vertical"
                        Background="{StaticResource TrialTemplateBrush}">
                <CheckBox IsChecked="{Binding IsFixed}"
                          Content="{x:Static expstrings:StringResources.Label_IsFixed}"
                          Margin="2"/>
                <ItemsControl x:Name="StepItemsCtrl"
                              ItemsSource="{Binding Steps}"
                              ItemTemplate="{StaticResource StepTemplate}"
                              HorizontalContentAlignment="Stretch"
                              Margin="2"/>
            </StackPanel>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="BlockEditTemplate">
        <StackPanel Orientation="Vertical" DataContext="{Binding ItemObject}">
            <CheckBox IsChecked="{Binding MustShuffleTrials}"
                      Content="{x:Static expstrings:StringResources.Label_MustShuffleTrials}"
                      HorizontalAlignment="Right" Margin="2"/>
            <ItemsControl x:Name="TrialItemsCtrl"
                          ItemsSource="{Binding Trials}"
                          ItemTemplate="{StaticResource TrialTemplate}"
                          FontSize="{Binding Source={StaticResource AppSettings}, Path=SmallFontSize}"
                          HorizontalContentAlignment="Stretch"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="IdObjectVMTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Source={StaticResource AppSettings}, Path=IconImageHeight}"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Image Grid.Column="0" Margin="2"
                   Style="{StaticResource IconImageStyle}"
                   Source="{Binding Path=IconImage}"
                   VerticalAlignment="Top"/>

            <TextBox Grid.Column="1" Margin="2"
                     Text="{Binding Path=TempId}"
                     IsEnabled="{Binding Path=Editable}"
                     VerticalAlignment="Top"/>
        </Grid>
    </DataTemplate>
</ResourceDictionary>