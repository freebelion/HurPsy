<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:expapp="clr-namespace:HurPsyExp"
                    xmlns:expdesign="clr-namespace:HurPsyExp.ExpDesign"
                    xmlns:expstrings="clr-namespace:HurPsyExpStrings;assembly=HurPsyExpStrings">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DesignTemplates.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Image x:Key="imgIconView" Source="..\Images\IconView.png" x:Shared="false"/>
    <Image x:Key="imgItemView" Source="..\Images\ItemView.png" x:Shared="false"/>

    <!--These attributes will affect toolbar buttons; they are purely experimental.
        If better designers come along, they may beautify and standardize
        the buttons' appearances in better ways.
    -->
    <Style x:Key="CommandButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height"
                Value="{Binding Source={StaticResource AppSettings}, Path=CommandButtonHeight}"/>
        <Setter Property="Width"
                Value="{Binding Source={StaticResource AppSettings}, Path=CommandButtonHeight}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground}"/>

        <Setter Property="Button.Effect">
            <Setter.Value>
                <DropShadowEffect Color="DarkBlue" Direction="225" ShadowDepth="5" BlurRadius="5" Opacity="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--This style is for `StackPanel` controls used as make-shift toolbars-->
    <Style x:Key="CommandBar" TargetType="{x:Type StackPanel}">
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!--This style is for `ToggleButton` controls which help switch between icons and list views in the two `ListBox` controls which contain `Stimulus` and `Locator` definitions-->
    <Style x:Key="DefsViewButton" TargetType="ToggleButton">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height"
                Value="{Binding Source={StaticResource AppSettings}, Path=CommandButtonHeight}"/>
        <Setter Property="Width"
                Value="{Binding Source={StaticResource AppSettings}, Path=CommandButtonHeight}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground}"/>

        <Setter Property="Button.Effect">
            <Setter.Value>
                <DropShadowEffect Color="DarkBlue" Direction="225" ShadowDepth="5" BlurRadius="5" Opacity="0.5"/>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="{DynamicResource imgIconView}"/>
                <Setter Property="ToolTip" Value="{x:Static expstrings:StringResources.Tooltip_IconView}"/>
            </Trigger>

            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content" Value="{DynamicResource imgItemView}"/>
                <Setter Property="ToolTip" Value="{x:Static expstrings:StringResources.Tooltip_ItemView}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--When applied to a `ListBoxItem`, this style makes it use the regular and selected brushes from the file *DesignBrushes.xaml*-->
    <Style x:Key="DefsListItem" TargetType="{x:Type ListBoxItem}">

        <Setter Property="FontSize" Value="{Binding Source={StaticResource AppSettings}, Path=SmallFontSize}"/>

        <!--This will bind the `IsSelected` property of the listbox item to the experiment element's `Selected` property.-->
        <Setter Property="IsSelected" Value="{Binding Selected}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="templateBorder" BorderThickness="2">
                        <ContentPresenter/>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True" >
                            <Setter TargetName="templateBorder" Property="Background" Value="{StaticResource SelectionBrush}"/>
                            <Setter TargetName="templateBorder" Property="BorderBrush" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False" >
                            <Setter TargetName="templateBorder" Property="Background" Value="Transparent"/>
                            <Setter TargetName="templateBorder" Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>