<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
 
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ExpDesign/DesignBrushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- All Image controls should have the height specified in the settings. -->
    <Style x:Key="IconImageStyle" TargetType="ContentControl">
        <Setter Property="Height" Value="{Binding Path=IconImageHeight, Source={StaticResource AppSettings}}"/>
        <Setter Property="Width" Value="{Binding Path=IconImageHeight, Source={StaticResource AppSettings}}"/>
    </Style>
    
    <!-- All menus will use this style. -->
    <Style TargetType="Menu">
        <Setter Property="Background" Value="{StaticResource MenuBrush}"/>
        <Setter Property="FontSize" Value="{Binding Path=MenuFontSize, Source={StaticResource AppSettings}}"/>
        <Setter Property="Padding" Value="2"/>
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="{StaticResource MenuItemBrush}"/>
    </Style>

    <Style x:Key="PairBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource PairBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0.5"/>
    </Style>

    <!--When applied to a `ListBoxItem`, this style makes it use the regular and selected brushes from the file *DesignBrushes.xaml*-->
    <Style x:Key="DesignListItem" TargetType="{x:Type ListBoxItem}">
        <!-- Selecting a ListBoxItem whould make the bound item selected and editable.-->
        <Setter Property="IsSelected" Value="{Binding Selected}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="templateBorder" BorderThickness="1">
                        <ContentPresenter/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True" >
                            <Setter TargetName="templateBorder" Property="Background" Value="{StaticResource SelectionBrush}"/>
                            <Setter TargetName="templateBorder" Property="BorderBrush" Value="{StaticResource SelectionBorder}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False" >
                            <Setter TargetName="templateBorder" Property="Background" Value="{StaticResource ItemBrush}"/>
                            <Setter TargetName="templateBorder" Property="BorderBrush" Value="{StaticResource ItemBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DesignListStyle" TargetType="ListBox">
        <Setter Property="FontSize" Value="{Binding Path=SmallFontSize, Source={StaticResource AppSettings}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource DesignListItem}"/>
    </Style>

    <Style x:Key="DesignButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Height" Value="{Binding Path=CommandButtonHeight, Source={StaticResource AppSettings}}"/>
        <Setter Property="Width" Value="{Binding Path=CommandButtonHeight, Source={StaticResource AppSettings}}"/>
        <Setter Property="Button.Effect">
            <Setter.Value>
                <DropShadowEffect Color="SteelBlue" Direction="225" ShadowDepth="5" BlurRadius="5" Opacity="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DesignToggleTemplate" TargetType="ToggleButton">
        <Border Name="buttonBorder" BorderThickness="1">
            <ContentPresenter Content="{TemplateBinding Content}" Margin="0"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="buttonBorder" Property="BorderBrush" Value="{StaticResource SelectionBorder}"/>
                <Setter TargetName="buttonBorder" Property="Background" Value="{StaticResource CheckedToggleBrush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="buttonBorder" Property="BorderBrush" Value="Transparent"/>
                <Setter TargetName="buttonBorder" Property="Background" Value="{StaticResource ToggleBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DesignToggleStyle" TargetType="ToggleButton">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template" Value="{StaticResource DesignToggleTemplate}"/>
        <Setter Property="Height" Value="{Binding Source={StaticResource AppSettings}, Path=CommandButtonHeight}"/>
        <Setter Property="Width" Value="{Binding Source={StaticResource AppSettings}, Path=CommandButtonHeight}"/>
        <Setter Property="ToggleButton.Effect">
            <Setter.Value>
                <DropShadowEffect Color="SteelBlue" Direction="225" ShadowDepth="5" BlurRadius="5" Opacity="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NumericUpDownSlider" TargetType="Slider">
        <Setter Property="Background" Value="{StaticResource ControlBackground}"/>
        <Setter Property="TickFrequency" Value="1"/>
        <Setter Property="IsSnapToTickEnabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <!--When applied to a Slider control, this template makes it look like a NumericUpDown control.-->
                <ControlTemplate TargetType="Slider">
                    <Grid Margin="2" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock VerticalAlignment="Center" Grid.Column="1"
                                   HorizontalAlignment="Stretch" TextAlignment="Center"
                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Window}}"
                                   Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                   Padding="5,2,5,2"/>
                        <RepeatButton Grid.Column="0" Command="Slider.DecreaseLarge"
                                      Content="{StaticResource DecrementIcon}"
                                      Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"/>
                        <RepeatButton Grid.Column="2" Command="Slider.IncreaseLarge"
                                      Content="{StaticResource IncrementIcon}"
                                      Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>